{"mappings":"gfAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iNCAzD,IAAAC,EAAAJ,EAAA,SCAAK,EAAAL,EAAA,SCAO,MAAMM,EAAO,CAChBC,gBAAiBC,SAASC,cAAc,2BACxCC,WAAYF,SAASC,cAAc,WACnCE,YAAaH,SAASC,cAAc,0B,WDKjCG,eAAeC,EAAgBC,GACpC,MAAMC,EAAWD,EACdE,KAAIC,GAUF,SAA6BC,GAClC,MAAMC,YAAEA,EAAWC,GAAEA,EAAEC,MAAEA,EAAKC,UAAEA,EAASC,aAAEA,EAAYC,aAAEA,GACvDN,EAEIO,EAAa,kCACnB,IAAIC,EAAY,GACZC,EAAMnB,SAASoB,cAAc,OAEjCD,EAAIE,IAAG,IAAAC,IAAAC,GAGP,MAAMC,EAAgB,IAAM,qDACoBZ,0BAC9BD,EAAcM,EAAaN,EAAcQ,EAAIE,aAC7DR,GAAgB,qHAGwBA,GAAgB,qHAEhBC,EAAYI,EAAY,eAChEH,EAAeA,EAAaU,MAAM,EAAG,GAAK,sEAG5BT,EAAeA,EAAaU,QAAQ,GAAK,uDAKnDC,EAAoB,IAAM,qDACgBf,0BAC9BD,EAAcM,EAAaN,EAAcQ,EAAIE,aAC7DR,GAAgB,qHAGwBA,GAAgB,+HAEhBC,EAAYI,EAAYR,EAAKkB,YACrEb,EAAeA,EAAaU,MAAM,EAAG,GAAK,sEAI5BT,EAAeA,EAAaU,QAAQ,GAAK,uDAKzD,IAAKZ,EAGH,OAFAI,EAAYR,EAAKkB,OAEVD,IAEPT,EADSJ,EAAUe,QAAU,EACjBf,EAAUN,KAAIsB,GAASC,EAAUC,IAAIF,KAAQG,KAAK,MAG5DF,EAAUC,IAAIlB,EAAU,IACxB,KACAiB,EAAUC,IAAIlB,EAAU,IACxB,UAEJ,OAAOU,GACT,CArEaU,CAAoBzB,KAE5BwB,KAAK,IAEInC,EAAKC,gBAVdoC,UAAY,GAYfrC,EAAKC,gBAAgBqC,mBAAmB,YAAa7B,EACvD,C,MElBAgB,EAAiB/B,EAAA,SAAA6C,aAA6C,SAAW7C,EAAA,SAAA8C,QAA6C,SFkFtH,MAAMP,EAAY,IAAIQ,KAEtB,EAAA1C,EAAA2C,gBAAeC,MAAKC,GACXA,EAAId,OAAOpB,KAAI,EAACI,GAAEA,EAAE+B,KAAEA,MAC3BZ,EAAUa,IAAIhC,EAAI+B,EAAA,M,MGtFtBE,EAAiBrD,EAAA,SAAA6C,aAA6C,SAAW7C,EAAA,SAAA8C,QAA6C,SH0F/G,MAAMQ,EAAuB,KAClC,MAAMC,EAAc/C,SAASoB,cAAc,OAC3C2B,EAAY1B,IAAG,IAAAC,IAAAuB,GAEfE,EAAYC,IAAM,wDAElBlD,EAAKC,gBAAgBoC,UAAY,iDACjBY,EAAYE,0EAEX,ED7EnBC,aAAaC,QAAQvD,EAAAwD,WAAY1D,KAAK2D,UAlBxB,CACZ,CACEzC,GAAI,GACJC,MAAO,cACPe,OAAQ,0BACRjB,YAAa,mCACbK,aAAc,IACdD,aAAc,cAEhB,CACEH,GAAI,EACJC,MAAO,cACPe,OAAQ,0BACRjB,YAAa,mCACbK,aAAc,IACdD,aAAc,iBKhBa,CAAAuC,IAC7B,IACE,MAAMC,EAAYL,aAAaM,QAAQF,GAGvC,IAAKC,EAEH,YADAT,IAMFzC,EAFgBX,KAAKC,MAAM4D,GAK7B,CAFE,MAAOE,GACPC,QAAQD,MAAM,UAAWA,EAAME,QACjC,GLUF,CAAgB/D,EAAAwD,W","sources":["node_modules/@parcel/runtime-js/lib/runtime-4ca7cb150fcb717e.js","src/js/library-queue-list.js","src/js/render-card.js","src/js/refs.js","node_modules/@parcel/runtime-js/lib/runtime-e1eb8d02e4da457a.js","node_modules/@parcel/runtime-js/lib/runtime-9d7265d3d587a24d.js","src/js/localstorage-load-films.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2Y0K8\\\":\\\"library.6ed7b45f.js\\\",\\\"6ihl4\\\":\\\"default-poster.e76d256b.jpg\\\",\\\"5tlci\\\":\\\"not-found-gif.2777c0e4.gif\\\",\\\"6hgAS\\\":\\\"library.5e694362.js\\\"}\"));","import { QUEUE_LIST } from './config';\nimport { loadFromStorage } from './localstorage-load-films';\n\n// -------------üëá–¶–µ mockup data, –ø–æ–∫–∏ –Ω–µ–º–∞—î —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ localStorage ------------\nconst movie = [\n  {\n    id: 13,\n    title: 'Test Movie1',\n    genres: 'Drama, Family, Thriller',\n    poster_path: '/1NqwE6LP9IEdOZ57NCT51ftHtWT.jpg',\n    vote_average: 6.2,\n    release_date: '2011-11-02',\n  },\n  {\n    id: 2,\n    title: 'Test Movie2',\n    genres: 'Comedy, Family, Romance',\n    poster_path: '/7CNCv9uhqdwK7Fv4bR4nmDysnd9.jpg',\n    vote_average: 7.8,\n    release_date: '2008-11-02',\n  },\n];\nlocalStorage.setItem(QUEUE_LIST, JSON.stringify(movie));\n// localStorage.removeItem(QUEUE_LIST);\n// -------------‚òù–¶–µ mockup data, –ø–æ–∫–∏ –Ω–µ–º–∞—î —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ localStorage -------------\n\n// STARTS HERE <================================================================<<<<\n\nloadFromStorage(QUEUE_LIST);\n","import { searchGenres } from './fetchApi';\nimport { refs } from './refs';\nimport { defaultPoster } from './create-images-for-js-input';\n\nexport const clearMarkup = el => {\n  el.innerHTML = '';\n};\n\nexport async function renderFilmCards(elem) {\n  const allCards = elem\n    .map(film => {\n      return createElementsMovie(film);\n    })\n    .join('');\n\n  clearMarkup(refs.mainContainerEl);\n\n  refs.mainContainerEl.insertAdjacentHTML('beforeend', allCards);\n}\n\nexport function createElementsMovie(data) {\n  const { poster_path, id, title, genre_ids, release_date, vote_average } =\n    data;\n\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  let genreFilm = '';\n  let img = document.createElement('img');\n\n  img.src = new URL('../images/default-poster.jpg', import.meta.url);\n\n\n  const markupFromAPI = () => `\n  <div class=\"main-section__card\" data-film-id=\"${id}\">\n        <img src=\"${poster_path ? POSTER_URL + poster_path : img.src}\" alt=\"${\n    title ? title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n    <div>\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${title ? title : 'Unknown title'}</h2>\n          <div class=\"main-section__cards\">\n\t\t\t\t\t<p class=\"main-section__description\">${genre_ids ? genreFilm : 'Unknown'} | ${\n    release_date ? release_date.slice(0, 4) : 'n/a'\n  }</p>\n                <span class=\"main-section__card-rating\">${\n                  vote_average ? vote_average.toFixed(1) : '0'\n                }</span></div>\n                </div>\n    </div>`;\n\n  const markupFromStorage = () => `\n  <div class=\"main-section__card\" data-film-id=\"${id}\">\n        <img src=\"${poster_path ? POSTER_URL + poster_path : img.src}\" alt=\"${\n    title ? title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n    <div>\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${title ? title : 'Unknown title'}</h2>\n                    <div class=\"main-section__cards\">\n\t\t\t\t\t<p class=\"main-section__description\">${genre_ids ? genreFilm : data.genres} | ${\n    release_date ? release_date.slice(0, 4) : 'n/a'\n  }</p>\n                <span class=\"main-section__card-rating\">${\n\n                  vote_average ? vote_average.toFixed(1) : '0'\n                }</span></div>\n                </div>\n    </div>`;\n\n  if (!genre_ids) {\n    genreFilm = data.genres;\n\n    return markupFromStorage();\n  } else if (genre_ids.length <= 3) {\n    genreFilm = genre_ids.map(genre => allGenres.get(genre)).join(', ');\n  } else {\n    genreFilm =\n      allGenres.get(genre_ids[0]) +\n      ', ' +\n      allGenres.get(genre_ids[1]) +\n      ', Other';\n  }\n  return markupFromAPI();\n}\n\nconst allGenres = new Map();\n\nsearchGenres().then(res => {\n  return res.genres.map(({ id, name }) => {\n    allGenres.set(id, name);\n  });\n});\n\nexport const renderNoMoviesMarkup = () => {\n  const notFoundGIF = document.createElement('img');\n  notFoundGIF.src = new URL('../images/not-found-gif.gif', import.meta.url);\n\n  notFoundGIF.alt = 'Travolta from Pulp Fiction is searching for something';\n\n  refs.mainContainerEl.innerHTML = `<div class=\"no-movies-wrap\">\n                ${notFoundGIF.outerHTML}\n                <p>No movies here yet</p>\n            </div>`;\n};\n","export const refs = {\n    mainContainerEl: document.querySelector('.main-section__allcards'),\n    searchForm: document.querySelector('.search'),\n    input_error: document.querySelector('.warning-notification'),\n    \n}\n\n","module.exports = require('./helpers/bundle-url').getBundleURL('2Y0K8') + require('./helpers/bundle-manifest').resolve(\"6ihl4\");","module.exports = require('./helpers/bundle-url').getBundleURL('2Y0K8') + require('./helpers/bundle-manifest').resolve(\"5tlci\");","import { renderFilmCards, renderNoMoviesMarkup } from './render-card';\n\n// Returns parsed data from Local Storage\nexport const loadFromStorage = key => {\n  try {\n    const savedData = localStorage.getItem(key);\n\n    // If there are no movies added to list in Local Storage, show Travolta GIF from Pulp Fiction\n    if (!savedData) {\n      renderNoMoviesMarkup();\n      return;\n    }\n\n    let movieList = JSON.parse(savedData);\n\n    renderFilmCards(movieList);\n  } catch (error) {\n    console.error('Error: ', error.message);\n  }\n};\n"],"names":["parcelRequire","register","JSON","parse","$ebqVR","$sRYpV","$37e33676934ad046$export$21666b427502ea6d","mainContainerEl","document","querySelector","searchForm","input_error","async","$91ea48cd49373332$export$e6243425577ce802","elem","allCards","map","film","data","poster_path","id","title","genre_ids","release_date","vote_average","POSTER_URL","genreFilm","img","createElement","src","URL","$6d373a9c9dcc7ae7$exports","markupFromAPI","slice","toFixed","markupFromStorage","genres","length","genre","$91ea48cd49373332$var$allGenres","get","join","$91ea48cd49373332$export$53e42f87dd0e8976","innerHTML","insertAdjacentHTML","getBundleURL","resolve","Map","searchGenres","then","res","name","set","$5cf33549d7aa9dd8$exports","$91ea48cd49373332$export$8e1999a21786fe69","notFoundGIF","alt","outerHTML","localStorage","setItem","QUEUE_LIST","stringify","key","savedData","getItem","error","console","message"],"version":3,"file":"library.6ed7b45f.js.map"}