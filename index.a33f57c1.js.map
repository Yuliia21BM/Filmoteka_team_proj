{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-81c5fd9e1199e750.js","src/js/upcoming-films.js","src/js/film-search-header.js","src/js/render-card.js","src/js/refs.js","node_modules/@parcel/runtime-js/lib/runtime-3709e3bb493177d0.js","src/js/pagination.js","src/js/filter.js","src/js/popular-film-API.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"hZ8Bi\\\":\\\"index.a33f57c1.js\\\",\\\"2O46N\\\":\\\"not-found-gif.2777c0e4.gif\\\"}\"));","import { searchUpcomimgFilms } from './fetchApi';\nimport { openModal } from './film-info-modal';\n\nconst upcomingListRef = document.querySelector('.swiper-wrapper');\n\n\nasync function getUpcomingFilms() {\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  try {\n    const { results } = await searchUpcomimgFilms();\n    if (!results || results === []) return;\n\n    const markup = results\n      .map(film => {\n        return `\n      <li class=\"upcoming-card swiper-slide\" data-film-id=\"${film.id}\">\n        <img\n          src=\"${\n            film.poster_path\n              ? POSTER_URL + film.poster_path\n              : '../images/default-poster.jpg'\n          }\"\n          alt=\"${film.title ? film.title : 'Not known'}\"\n          class=\"upcoming-img\"\n          loading=\"lazy\"\n        />\n        <p class=\"upcoming-card-title\">Release date <br/>\n${film.release_date ? film.release_date : 'Not known'}</p>\n      </li>`;\n      })\n      .join('');\n\n    upcomingListRef.innerHTML = '';\n    upcomingListRef.insertAdjacentHTML('afterbegin', markup);\n\n    const swiper = new Swiper('.swiper', {\n  // Optional parameters\n  direction: 'horizontal',\n  slidesPerView: 'auto',\n  loopedSlides: results.length,\n  spaceBetween: 20,\n  loop: true,\n\n  // Navigation arrows\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  speed: 1500,\n  autoplay: {\n    delay: 3000,\n    disableOnInteraction: false,\n  },\n});\n\n  } catch (err) {\n    console.log(err);\n  }\n}\ngetUpcomingFilms();\n\nupcomingListRef.addEventListener('click', e => {\n  openModal(e, 'upcoming-card');\n});\n","import { searchMovieByName } from '../js/fetchApi';\nimport { renderFilmCards } from '../js/render-card';\nimport * as pagination from './pagination';\nimport { notFoundFilm } from '../js/create-images-for-js-input';\n\n\nconst input = document.querySelector('.search__input');\nconst btn = document.querySelector('.search__button');\nconst searchForm = document.querySelector('.search');\nconst error = document.querySelector('.warning-notification');\nconst mainSectionCards = document.querySelector('.main-section__allcards');\n\n\nsearchForm.addEventListener('submit', onFormSubmit);\n\nasync function onFormSubmit(e) {\n    e.preventDefault();\n    mainSectionCards.scrollIntoView({ behavior: 'smooth' });\n  const value = e.currentTarget.searchQuery.value.trim();\n    console.log(value);\n\n    await getMoviesHandler(value) \n    pagination.setCurrentPageto1()\n    pagination.subscribeOnPageChange(() => {\n    getMoviesHandler(input.value)\n\n    console.log(input.value, input.text, 'subscriberTextContent')\n});    \n    \n    };\n\nasync function getMoviesHandler(value) {\n    if (value === '') { \n\n        return (error.textContent =\n            'No matches found for your query. Enter the correct movie name.');\n    }\n    else error.textContent = '';\n\n    try {\n        const response = await searchMovieByName(value, pagination.getCurrentPage());\n        pagination.setTotalPages(response.total_pages)\n        const getMovie = response.results;\n        console.log(response);\n        console.log(getMovie);\n\n        if (getMovie.length === 0) {\n\n            return (error.textContent = `No matches found for your query. Enter the correct movie name.`),\n                mainSectionCards.innerHTML = \" \",\n                mainSectionCards.innerHTML = `<div class=\"wrong-box\"> <p class=\"not-found-text\">Not Found</p></div>`,\n                document.querySelector('.wrong-box').appendChild(notFoundFilm).classList.add('film-not-found'),\n                document.querySelector('.pagination-container').classList.add(\"visually-hidden\");\n            \n             \n    }\n        else {\n            error.textContent = '',\n            document.querySelector('.pagination-container').classList.remove(\"visually-hidden\");    \n        };\n\n        renderFilmCards(getMovie);\n\n    } catch (error) {\n        console.log(error);\n    }\n};\n","import { searchGenres } from './fetchApi';\nimport { refs } from './refs';\nimport { defaultPoster } from './create-images-for-js-input';\n//import { renderSkeleton } from './popular-film-API';\n\nexport const clearMarkup = el => {\n  el.innerHTML = '';\n};\n\nexport async function renderFilmCards(elem) {\n  const allCards = elem\n    .map(film => {\n      return createElementsMovie(film);\n    })\n    .join('');\n\n  clearMarkup(refs.mainContainerEl);\n\n  refs.mainContainerEl.insertAdjacentHTML('beforeend', allCards);\n}\n\nexport function createElementsMovie(data) {\n  const { poster_path, id, title, genre_ids, release_date, vote_average } =\n    data;\n\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  let genreFilm = '';\n\n  const markupFromAPI = () => `\n  <li class=\"main-section__card-conteiner\">\n  <div class=\"main-section__card main-section__popup\" data-film-id=\"${data.id}\">\n        <img src=\"${\n          data.poster_path ? POSTER_URL + data.poster_path : defaultPoster.src\n        }\" alt=\"${\n    data.title ? data.title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n  <p class=\"main-section__popup-title\"> <span class = \"popUp-title\">About</span> <br/>${\n    data.overview ? data.overview : 'No description'\n  }</p>\n  </div>\n      <div class=\"main-section__card main-section__cards\" data-film-id=\"${\n        data.id\n      }\">\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${\n            data.title ? data.title : 'Unknown title'\n          }</h2>\n                   \n\t\t\t\t\t<p class=\"main-section__description\">${\n            data.genre_ids ? genreFilm : 'Unknown'\n          } | ${data.release_date ? data.release_date.slice(0, 4) : 'n/a'}\n\t\t\t\t\n                <span class=\"main-section__card-rating\">${\n                  data.vote_average ? data.vote_average.toFixed(1) : '0.0'\n                }</span>\n                </p>\n      </div>             \n    </div>`;\n\n  const markupFromStorage = () => `\n  <li class=\"main-section__card-conteiner\">\n  <div class=\"main-section__card main-section__popup\" data-film-id=\"${data.id}\">\n        <img src=\"${\n          data.poster_path ? POSTER_URL + data.poster_path : defaultPoster.src\n        }\" alt=\"${\n    data.title ? data.title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n  </div>\n      <div class=\"main-section__card main-section__cards\" data-film-id=\"${\n        data.id\n      }\">\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${\n            data.title ? data.title : 'Unknown title'\n          }</h2>\n                   \n\t\t\t\t\t<p class=\"main-section__description\">${data.genres ? genreFilm : 'Unknown'} | ${\n    data.release_date ? data.release_date.slice(0, 4) : 'n/a'\n  }\n\t\t\t\t\n                <span class=\"main-section__card-rating\">${\n                  data.vote_average\n                    ? Number(data.vote_average).toFixed(1)\n                    : '0.0'\n                }</span>\n                </p>\n      </div>             \n    </div>`;\n\n  if (!genre_ids) {\n    genreFilm = data.genres;\n\n    return markupFromStorage();\n  } else if (genre_ids.length <= 3) {\n    genreFilm = genre_ids.map(genre => allGenres.get(genre)).join(', ');\n  } else {\n    genreFilm =\n      allGenres.get(genre_ids[0]) +\n      ', ' +\n      allGenres.get(genre_ids[1]) +\n      ', Other';\n  }\n  return markupFromAPI();\n}\n\nconst allGenres = new Map();\n\nsearchGenres().then(res => {\n  return res.genres.map(({ id, name }) => {\n    allGenres.set(id, name);\n  });\n});\n\nexport const renderNoMoviesMarkup = () => {\n  const notFoundGIF = document.createElement('img');\n  notFoundGIF.src = new URL('../images/not-found-gif.gif', import.meta.url);\n  notFoundGIF.alt = 'Travolta from Pulp Fiction is searching for something';\n  notFoundGIF.class = 'not-found';\n\n  refs.mainContainerEl.innerHTML = `<div class=\"no-movies-wrap\">\n                ${notFoundGIF.outerHTML}\n                <p>No movies here yet</p>\n            </div>`;\n};\n","export const refs = {\n  mainContainerEl: document.querySelector('.main-section__allcards'),\n  searchForm: document.querySelector('.search'),\n  input_error: document.querySelector('.warning-notification'),\n  watchedBtn: document.querySelector('.header-lib__btn-watched'),\n  queueBtn: document.querySelector('.header-lib__btn-queue'),\n  paginationWrap: document.querySelector('.pagination-container'),\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2O46N\")).toString();","\nconst btn1Ref = document.querySelector('[data-index=\"1\"]');\nconst btn2Ref = document.querySelector('[data-index=\"2\"]');\nconst btn3Ref = document.querySelector('[data-index=\"3\"]');\nconst btn4Ref = document.querySelector('[data-index=\"4\"]');\nconst btn5Ref = document.querySelector('[data-index=\"5\"]');\nconst firstPageRef = document.querySelector('.first-button');\nconst lastPageRef = document.querySelector('.last-button');\nconst paginationRef = document.querySelector('.pagination-container');\nconst rightArrowRef = document.querySelector('.arrow-right');\nconst leftArrowRef = document.querySelector('.arrow-left');\nconst prevDotsRef = document.querySelector('#previous');\nconst afterDotsRef = document.querySelector('#after');\nconst mainContainer = document.querySelector('.main-container');\n\npaginationRef.addEventListener('click', onPaginationClick);\n\nlet currentPage = 1;\nlet totalPages = 1000;\nlet btns = document.querySelectorAll('.pagination-button');\n\nprevDotsRef.hidden = true;\nleftArrowRef.hidden = true;\nfirstPageRef.hidden = true;\n\n// function setPagination(page, total_pages) {\n//   currentPage = page;\n//   totalPages = total_pages;\n//   lastPageRef.textContent = totalPages;\n//    btns.forEach(el => el.classList.remove('pagination--current'));\n// }\n\nfunction setCurrentPageto1(page) {\n  currentPage = page;\n  btns.forEach(el => el.classList.remove('pagination--current'));\n  btn1Ref.classList.add('pagination--current');\n}\n\nfunction setTotalPages(total_pages) {\n  totalPages = total_pages;\n  lastPageRef.textContent = totalPages;\n}\n\nfunction onPaginationClick(event) {\n  if (event.target.tagName === 'BUTTON') {\n    if (Number(event.target.textContent)) {\n      currentPage = Number(event.target.textContent);\n    }\n\n    prevDotsRef.hidden = true;\n    afterDotsRef.hidden = true;\n\n    if (event.target.classList.contains('pagination-button')) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      event.target.classList.add('pagination--current');\n    }\n\n    if (event.target.classList.contains('arrow-right') && currentPage < totalPages) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.classList.add('pagination--current');\n      btn1Ref.textContent = Number(btn1Ref.textContent) + 5;\n      btn2Ref.textContent = Number(btn2Ref.textContent) + 5;\n      btn3Ref.textContent = Number(btn3Ref.textContent) + 5;\n      btn4Ref.textContent = Number(btn4Ref.textContent) + 5;\n      btn5Ref.textContent = Number(btn5Ref.textContent) + 5;\n      currentPage = Number(btn1Ref.textContent);\n    }\n\n    if (event.target.classList.contains('arrow-left') && currentPage >= 5) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.textContent = Number(btn1Ref.textContent) - 5;\n      btn2Ref.textContent = Number(btn2Ref.textContent) - 5;\n      btn3Ref.textContent = Number(btn3Ref.textContent) - 5;\n      btn4Ref.textContent = Number(btn4Ref.textContent) - 5;\n      btn5Ref.textContent = Number(btn5Ref.textContent) - 5;\n      btn5Ref.classList.add('pagination--current');\n      currentPage = Number(btn5Ref.textContent);\n    }\n\n    if (event.target.classList.contains('first-button')) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.textContent = 1;\n      btn2Ref.textContent = 2;\n      btn3Ref.textContent = 3;\n      btn4Ref.textContent = 4;\n      btn5Ref.textContent = 5;\n      btn1Ref.classList.add('pagination--current');\n      currentPage = Number(btn1Ref.textContent);\n      leftArrowRef.hidden = true;\n      prevDotsRef.hidden = true;\n      firstPageRef.hidden = true;\n    }\n\n    if (event.target.classList.contains('last-button')) {\n      btns.forEach(el => el.classList.remove('pagination--current'));\n      btn1Ref.textContent = Number(lastPageRef.textContent) - 4;\n      btn2Ref.textContent = Number(lastPageRef.textContent) - 3;\n      btn3Ref.textContent = Number(lastPageRef.textContent) - 2;\n      btn4Ref.textContent = Number(lastPageRef.textContent) - 1;\n      btn5Ref.textContent = lastPageRef.textContent;\n      btn5Ref.classList.add('pagination--current');\n      currentPage = Number(btn5Ref.textContent);\n      rightArrowRef.hidden = true;\n      afterDotsRef.hidden = true;\n      lastPageRef.hidden = true;\n    }\n\n    if (Number(currentPage) > 5) {\n      leftArrowRef.hidden = false;\n      prevDotsRef.hidden = false;\n      firstPageRef.hidden = false;\n    } else {\n      leftArrowRef.hidden = true;\n      prevDotsRef.hidden = true;\n      firstPageRef.hidden = true;\n    }\n\n    if (Number(currentPage) < totalPages - 4) {\n      rightArrowRef.hidden = false;\n      afterDotsRef.hidden = false;\n      lastPageRef.hidden = false;\n    }\n\n    //     gallery.innerHTML = '';\n    mainContainer.scrollIntoView({ behavior: 'smooth' })\n  \n          //  window.scrollTo({ top: 0, behavior: 'smooth' });\n        // if (inputRef.value !== '') {\n        //   movieSearcher(inputRef.value, currentPage);\n        // } else {\n        //   currentPage();\n        // }\n     \n    if (_subscriber) { _subscriber() }\n    \n   \n    let pageSize = 9;\n\n    function defineResultsPerPage() {\n      if (window.innerWidth >= 1024) {\n        pageSize = 9;\n      } else if (window.innerWidth >= 768 && window.innerWidth < 1024) {\n        pageSize = 8;\n      } else if (window.innerWidth < 768) {\n        pageSize = 4;\n      }\n      return pageSize;\n    }\n  }\n}\n\nfunction getCurrentPage() {\n  if (isNaN(currentPage)) {\n    currentPage = 1;\n  }\n  console.log( \"currentPage\", currentPage )\n  return +currentPage\n}\n\nlet _subscriber;\n\nfunction subscribeOnPageChange(subscriber) {\n  _subscriber = subscriber;\n}\n\nconsole.log('paginationInit');\nconsole.log('subscriber', _subscriber);\nconsole.log('CurrentPage', currentPage)\nexport { getCurrentPage, subscribeOnPageChange, setCurrentPageto1, setTotalPages }\n\n","import { API_KEY } from './config';\nimport { BASE_URL } from './config';\nimport { renderFilmCards } from './render-card';\nimport * as pagination from './pagination';\n\n\nconst API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}`;\n\nconst genres = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nconst tagsEl = document.querySelector('.genres-list');\nconst mobileBtn = document.querySelector('.genres-button-mobile');\n\n\n\n\nlet selectedGenre = [];\nsetGenre();\nfunction setGenre() {\n  genres.forEach(genre => {\n    const filmCard = document.createElement('button');\n    filmCard.classList.add('genres-button');\n    filmCard.id = genre.id;\n    filmCard.innerText = genre.name;\n    \n    filmCard.addEventListener('click', () => {\n      if (selectedGenre.length == 0) {\n        selectedGenre.push(genre.id);\n      }\n      console.log('selectedGenre' + selectedGenre);\n      \n      \n      getMovies(API_URL + '&with_genres=' + genre.id, 1);\n      pagination.setCurrentPageto1()\n      pagination.subscribeOnPageChange(() => {\n        getMovies(API_URL + '&with_genres=' + genre.id, pagination.getCurrentPage())\n      } );\n      selectedGenre = [];\n    });\n    tagsEl.append(filmCard);\n  });\n}\n\n// getMovies(API_URL);\n\n\n\nfunction getMovies(url, page) {\n  url = url + '&page=' + page;\n  console.log(\"ссылка\", url)\n  console.log(\"страница\", page)\n  fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.results);\n       console.log(data.page);\n\n      if (data.results.length !== 0) {\n        renderFilmCards(data.results);\n        pagination.setTotalPages(data.total_pages)\n      }\n    });\n}\n\n\n// function getMovies(url) {\n//   fetch(url)\n//     .then(res => res.json())\n//     .then(data => {\n//       console.log(data.results);\n//        console.log(data.page);\n//       if (data.results.length !== 0) {\n//         renderFilmCards(data.results);\n//       }\n//     });\n// }\n\n\n\n\nmobileBtn.addEventListener('click', openGenreList);\n\nfunction openGenreList() {\n if(tagsEl.classList.toggle('is-active'))\n    mobileBtn.textContent = 'HIDE GENRES';\n  else(\n  mobileBtn.textContent = 'SHOW GENRES');\n};\n\n\n\n\n\n\n// ---------------------------- second code -------------------------------------------\n\n// const familyBtn = document.querySelector('#family');\n// const musicBtn = document.querySelector('#music');\n// const mysteryBtn = document.querySelector('#mystery');\n// const dramaBtn = document.querySelector('#drama');\n// const warBtn = document.querySelector('#war');\n// const scienceFictionBtn = document.querySelector('#scienceFiction');\n// const thrillerBtn = document.querySelector('#thriller');\n\n// familyBtn.addEventListener('click', getFamily);\n// musicBtn.addEventListener('click', getMusic);\n// mysteryBtn.addEventListener('click', getMystery);\n// dramaBtn.addEventListener('click', getDrama);\n// warBtn.addEventListener('click', getWar);\n// scienceFictionBtn.addEventListener('click', getScienceFiction);\n// thrillerBtn.addEventListener('click', getThriller);\n\n// function getFamily(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=10751`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getMusic(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=37`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getMystery(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=9648`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getDrama(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=18`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getWar(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=10752`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getScienceFiction(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=878`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getThriller(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=53`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getMystery(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=9648`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// ---------------------- first code -------------------------\n\n// familyBtn.addEventListener('click', getMovies);\n\n// // function rengerGanre(id) {\n\n// // }\n\n// // function getMovies() {\n// //     const urlAPI = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n// //     axios.get(urlAPI)\n// //         .then(res => console.log(res.data.total_results))\n// //         .then(({ results }) => renderFilms(results))\n// //     .catch(error => console.log(error))\n// // }\n\n// function getMovies(page) {\n//     // page = 1\n//     for (let page = 1; page < 5; page++) {\n//        const urlAPI = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n//     console.log(urlAPI);\n//     axios.get(urlAPI)\n//         .then(res => {\n//             page += 1;\n\n//             return res.data\n//         })\n//         .then(({ results }) => renderFilms(results))\n\n//         // .then(({ results }) => renderFilms(results))\n//     .catch(error => console.log(error))\n//     }\n\n// }\n\n// function renderFilms(results) {\n//     renderFilmsArea.innerHTML = '';\n\n//     const movieElements = results.map(({ poster_path, title, genre_ids }) => {\n//         if(genre_ids.includes(16))\n//         return `<div class=\"main-section__card\">\n//         <img src=\"https://www.themoviedb.org/t/p/w220_and_h330_face/${poster_path}\" width=\"500\" height=\"600\" alt=\"${title}\"  loading=\"lazy\">\n//     <p class=\"main-section__name\">\n// \t\t\t\t\t<h2 class=\"main-section__card-title\">${title}</h2>\n// \t\t\t\t\t<p class=\"main-section__description\">Drama, Action | 2022</p>\n// \t\t\t\t</p>\n//     </div>`\n//     }).join('');\n//         renderFilmsArea.insertAdjacentHTML('beforeend', movieElements)\n\n// }\n","import { getPopularFilm } from '../js/fetchApi';\nimport * as pagination from './pagination';\nimport { refs } from './refs';\n\nimport { renderFilmCards } from './render-card';\nimport Spinner from './spinner';\nconst spinner = new Spinner();\n\nconst cardsTemplate = `<li class=\"cards-skeleton\">\n        <div class=\"movie--isloading\">\n          <div class=\"loading-image\"></div>\n          <div class=\"loading-content\">\n            <div class=\"loading-text-container\">\n              <div class=\"loading-main-text\"></div>\n              <div class=\"loading-sub-text\"></div>\n            </div>\n            <div class=\"loading-btn\"></div>\n          </div>\n        </div>\n        </li>`;\nconst cardsSkeleton = []; \n\n\nexport const renderSkeleton = () => {\n  for (let i = 1; i <= 20; i+=1) {\n    cardsSkeleton.push(cardsTemplate);\n  }\n  refs.mainContainerEl.innerHTML = cardsSkeleton.join('');\n  return;\n}\n  \nconst _getPopularFilm = () => {\n  spinner.enable();\n  \n  getPopularFilm(pagination.getCurrentPage()).then(\n    ({ page, results, total_pages, total_results }) => {\n      renderFilmCards(results);\n      spinner.disable();\n    }\n  );\n};\n\n_getPopularFilm();\npagination.subscribeOnPageChange(_getPopularFilm);\n"],"names":["parcelRequire","register","JSON","parse","$9TCtp","$7de36ec56bfec575$var$upcomingListRef","document","querySelector","async","results","searchUpcomimgFilms","markup","map","film","id","poster_path","title","release_date","join","innerHTML","insertAdjacentHTML","Swiper","direction","slidesPerView","loopedSlides","length","spaceBetween","loop","navigation","nextEl","prevEl","speed","autoplay","delay","disableOnInteraction","err","console","log","$7de36ec56bfec575$var$getUpcomingFilms","addEventListener","e","$hbpud","openModal","$ee27a4d7c64fc8c4$export$21666b427502ea6d","mainContainerEl","searchForm","input_error","watchedBtn","queueBtn","paginationWrap","$5c9ec74aeed8cd43$export$e6243425577ce802","elem","allCards","data","genre_ids","vote_average","POSTER_URL","genreFilm","markupFromAPI","$45IZH","defaultPoster","src","overview","slice","toFixed","markupFromStorage","genres","Number","genre","$5c9ec74aeed8cd43$var$allGenres","get","$5c9ec74aeed8cd43$export$53e42f87dd0e8976","Map","searchGenres","then","res","name","set","URL","resolve","import","meta","url","toString","$1bab9c519cfa82bc$var$btn1Ref","$1bab9c519cfa82bc$var$btn2Ref","$1bab9c519cfa82bc$var$btn3Ref","$1bab9c519cfa82bc$var$btn4Ref","$1bab9c519cfa82bc$var$btn5Ref","$1bab9c519cfa82bc$var$firstPageRef","$1bab9c519cfa82bc$var$lastPageRef","$1bab9c519cfa82bc$var$paginationRef","$1bab9c519cfa82bc$var$rightArrowRef","$1bab9c519cfa82bc$var$leftArrowRef","$1bab9c519cfa82bc$var$prevDotsRef","$1bab9c519cfa82bc$var$afterDotsRef","$1bab9c519cfa82bc$var$mainContainer","event","target","tagName","textContent","$1bab9c519cfa82bc$var$currentPage","hidden","classList","contains","$1bab9c519cfa82bc$var$btns","forEach","el","remove","add","$1bab9c519cfa82bc$var$totalPages","scrollIntoView","behavior","$1bab9c519cfa82bc$var$_subscriber","querySelectorAll","$1bab9c519cfa82bc$export$e1d2e749928b5847","page","$1bab9c519cfa82bc$export$a11d46610348f2d2","total_pages","$1bab9c519cfa82bc$export$7945ba8eb1c827e6","isNaN","$1bab9c519cfa82bc$export$47daba0b47b5b842","subscriber","$65ff9575e8ee77de$var$input","$65ff9575e8ee77de$var$searchForm","$65ff9575e8ee77de$var$error","$65ff9575e8ee77de$var$mainSectionCards","$65ff9575e8ee77de$var$getMoviesHandler","value","response","searchMovieByName","getMovie","appendChild","notFoundFilm","error1","preventDefault","currentTarget","searchQuery","trim","text","$kwJfa","$cc8167df025acb14$var$API_URL","BASE_URL","API_KEY","$cc8167df025acb14$var$genres","$cc8167df025acb14$var$tagsEl","$cc8167df025acb14$var$mobileBtn","$cc8167df025acb14$var$selectedGenre","$cc8167df025acb14$var$getMovies","fetch","json","filmCard","createElement","innerText","push","append","toggle","$704a8c9070f82bfa$var$spinner","default","$704a8c9070f82bfa$var$_getPopularFilm","enable","getPopularFilm","total_results","disable"],"version":3,"file":"index.a33f57c1.js.map"}