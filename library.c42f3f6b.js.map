{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-748158283e1a47d2.js","src/js/library-queue-list.js","src/js/render-card.js","src/js/refs.js","node_modules/@parcel/runtime-js/lib/runtime-3709e3bb493177d0.js","src/js/localstorage-load-films.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1zJhX\\\":\\\"library.c42f3f6b.js\\\",\\\"2O46N\\\":\\\"not-found-gif.2777c0e4.gif\\\",\\\"bZbcF\\\":\\\"library.e5d5335e.js\\\"}\"));","import { QUEUE_LIST, WATCHED_LIST } from './config';\nimport { loadFromStorage } from './localstorage-load-films';\nimport { refs } from './refs';\n\nconst onWatchedBtnClick = async () => {\n  if (refs.watchedBtn.classList.contains('header-lib__btn--current')) {\n    return;\n  }\n  await loadFromStorage(WATCHED_LIST);\n\n  try {\n    const activeTab = refs.watchedBtn.textContent;\n\n    await localStorage.setItem('active-tab', JSON.stringify(activeTab));\n  } catch (error) {\n    console.error('Error: ', error.message);\n  }\n\n  refs.queueBtn.classList.toggle('header-lib__btn--current');\n  refs.watchedBtn.classList.toggle('header-lib__btn--current');\n};\n\nconst onQueueBtnClick = async () => {\n  if (refs.queueBtn.classList.contains('header-lib__btn--current')) {\n    return;\n  }\n  await loadFromStorage(QUEUE_LIST);\n\n  try {\n    const activeTab = refs.queueBtn.textContent;\n\n    await localStorage.setItem('active-tab', JSON.stringify(activeTab));\n  } catch (error) {\n    console.error('Error: ', error.message);\n  }\n\n  refs.watchedBtn.classList.toggle('header-lib__btn--current');\n  refs.queueBtn.classList.toggle('header-lib__btn--current');\n};\n\nconst onLoad = async () => {\n  try {\n    const activeTab = await JSON.parse(localStorage.getItem('active-tab'));\n\n    if (activeTab === refs.queueBtn.textContent) {\n      refs.queueBtn.classList.toggle('header-lib__btn--current');\n\n      return await loadFromStorage(QUEUE_LIST);\n    }\n\n    if (activeTab === refs.watchedBtn.textContent) {\n      refs.watchedBtn.classList.toggle('header-lib__btn--current');\n\n      return await loadFromStorage(WATCHED_LIST);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nrefs.watchedBtn.addEventListener('click', onWatchedBtnClick);\nrefs.queueBtn.addEventListener('click', onQueueBtnClick);\n\nonLoad();\n","import { searchGenres } from './fetchApi';\nimport { refs } from './refs';\nimport { defaultPoster } from './create-images-for-js-input';\n//import { renderSkeleton } from './popular-film-API';\n\nexport const clearMarkup = el => {\n  el.innerHTML = '';\n};\n\nexport async function renderFilmCards(elem) {\n  const allCards = elem\n    .map(film => {\n      return createElementsMovie(film);\n    })\n    .join('');\n\n  clearMarkup(refs.mainContainerEl);\n\n  refs.mainContainerEl.insertAdjacentHTML('beforeend', allCards);\n}\n\nexport function createElementsMovie(data) {\n  const { poster_path, id, title, genre_ids, release_date, vote_average } =\n    data;\n\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  let genreFilm = '';\n\n  const markupFromAPI = () => `\n  <li class=\"main-section__card-conteiner\">\n  <div class=\"main-section__card main-section__popup\" data-film-id=\"${data.id}\">\n        <img src=\"${\n          data.poster_path ? POSTER_URL + data.poster_path : defaultPoster.src\n        }\" alt=\"${\n    data.title ? data.title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n  <p class=\"main-section__popup-title\"> <span class = \"popUp-title\">About</span> <br/>${\n    data.overview ? data.overview : 'No description'\n  }</p>\n  </div>\n      <div class=\"main-section__card main-section__cards\" data-film-id=\"${\n        data.id\n      }\">\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${\n            data.title ? data.title : 'Unknown title'\n          }</h2>\n                   \n\t\t\t\t\t<p class=\"main-section__description\">${\n            data.genre_ids ? genreFilm : 'Unknown'\n          } | ${data.release_date ? data.release_date.slice(0, 4) : 'n/a'}\n\t\t\t\t\n                <span class=\"main-section__card-rating\">${\n                  data.vote_average ? data.vote_average.toFixed(1) : '0.0'\n                }</span>\n                </p>\n      </div>             \n    </div>`;\n\n  const markupFromStorage = () => `\n  <li class=\"main-section__card-conteiner\">\n  <div class=\"main-section__card main-section__popup\" data-film-id=\"${data.id}\">\n        <img src=\"${\n          data.poster_path ? POSTER_URL + data.poster_path : defaultPoster.src\n        }\" alt=\"${\n    data.title ? data.title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n  </div>\n      <div class=\"main-section__card main-section__cards\" data-film-id=\"${\n        data.id\n      }\">\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${\n            data.title ? data.title : 'Unknown title'\n          }</h2>\n                   \n\t\t\t\t\t<p class=\"main-section__description\">${data.genres ? genreFilm : 'Unknown'} | ${\n    data.release_date ? data.release_date.slice(0, 4) : 'n/a'\n  }\n\t\t\t\t\n                <span class=\"main-section__card-rating\">${\n                  data.vote_average\n                    ? Number(data.vote_average).toFixed(1)\n                    : '0.0'\n                }</span>\n                </p>\n      </div>             \n    </div>`;\n\n  if (!genre_ids) {\n    genreFilm = data.genres;\n\n    return markupFromStorage();\n  } else if (genre_ids.length <= 3) {\n    genreFilm = genre_ids.map(genre => allGenres.get(genre)).join(', ');\n  } else {\n    genreFilm =\n      allGenres.get(genre_ids[0]) +\n      ', ' +\n      allGenres.get(genre_ids[1]) +\n      ', Other';\n  }\n  return markupFromAPI();\n}\n\nconst allGenres = new Map();\n\nsearchGenres().then(res => {\n  return res.genres.map(({ id, name }) => {\n    allGenres.set(id, name);\n  });\n});\n\nexport const renderNoMoviesMarkup = () => {\n  const notFoundGIF = document.createElement('img');\n  notFoundGIF.src = new URL('../images/not-found-gif.gif', import.meta.url);\n  notFoundGIF.alt = 'Travolta from Pulp Fiction is searching for something';\n  notFoundGIF.class = 'not-found';\n\n  refs.mainContainerEl.innerHTML = `<div class=\"no-movies-wrap\">\n                ${notFoundGIF.outerHTML}\n                <p>No movies here yet</p>\n            </div>`;\n};\n","export const refs = {\n  mainContainerEl: document.querySelector('.main-section__allcards'),\n  searchForm: document.querySelector('.search'),\n  input_error: document.querySelector('.warning-notification'),\n  watchedBtn: document.querySelector('.header-lib__btn-watched'),\n  queueBtn: document.querySelector('.header-lib__btn-queue'),\n  paginationWrap: document.querySelector('.pagination-container'),\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2O46N\")).toString();","// import { refs } from './refs';\nimport { renderFilmCards, renderNoMoviesMarkup } from './render-card';\nimport { refs } from './refs';\n\n// Returns parsed data from Local Storage\nexport const loadFromStorage = async key => {\n  try {\n    const savedData = localStorage.getItem(key);\n\n    // If there are no movies added to list in Local Storage, show Travolta GIF from Pulp Fiction\n    if (!savedData || savedData.length <= 2) {\n      renderNoMoviesMarkup();\n      return;\n    }\n\n    let movieList = await JSON.parse(savedData);\n\n    // треба доробити перевірку,\n    // якщо в списку менше 20 фільмів, ховати пагінацію\n    // if (\n    //   movieList.length < 20 &&\n    //   !refs.paginationWrap.classList.contains('visually-hidden')\n    // ) {\n    //   refs.paginationWrap.classList.add('visually-hidden');\n    // } else {\n    //   refs.paginationWrap.classList.remove('visually-hidden');\n    // }\n\n    console.log('movieList:', movieList);\n    return renderFilmCards(movieList);\n  } catch (error) {\n    console.error('Error: ', error.message);\n  }\n};\n"],"names":["parcelRequire","register","JSON","parse","$kwJfa","$9TCtp","$ee27a4d7c64fc8c4$export$21666b427502ea6d","mainContainerEl","document","querySelector","searchForm","input_error","watchedBtn","queueBtn","paginationWrap","async","$5c9ec74aeed8cd43$export$e6243425577ce802","elem","allCards","map","film","data","poster_path","id","title","genre_ids","release_date","vote_average","POSTER_URL","genreFilm","markupFromAPI","$45IZH","defaultPoster","src","overview","slice","toFixed","markupFromStorage","genres","Number","length","genre","$5c9ec74aeed8cd43$var$allGenres","get","join","$5c9ec74aeed8cd43$export$53e42f87dd0e8976","innerHTML","insertAdjacentHTML","Map","searchGenres","then","res","name","set","$3fc730a2dd74fd3f$exports","URL","resolve","import","meta","url","toString","$5c9ec74aeed8cd43$export$8e1999a21786fe69","notFoundGIF","createElement","alt","class","outerHTML","$316d29d45be225a8$export$b366658078313913","key","savedData","localStorage","getItem","movieList","console","log","error","message","addEventListener","classList","contains","WATCHED_LIST","activeTab","textContent","setItem","stringify","toggle","QUEUE_LIST","$f212929b7db51af3$var$onLoad"],"version":3,"file":"library.c42f3f6b.js.map"}