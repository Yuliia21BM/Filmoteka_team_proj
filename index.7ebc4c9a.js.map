{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-78ec25f89c486057.js","src/js/upcoming-films.js","src/js/film-search-header.js","src/js/render-card.js","src/js/refs.js","node_modules/@parcel/runtime-js/lib/runtime-bd5c34c18d96e10a.js","src/js/filter.js","src/js/popular-film-API.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"hZ8Bi\\\":\\\"index.7ebc4c9a.js\\\",\\\"1aYh8\\\":\\\"default-poster.e76d256b.jpg\\\"}\"));","import { searchUpcomimgFilms } from './fetchApi';\nimport { openModal } from './film-info-modal';\n\nconst upcomingListRef = document.querySelector('.swiper-wrapper');\n\nconst swiper = new Swiper('.swiper', {\n  // Optional parameters\n  direction: 'horizontal',\n  slidesPerView: 2,\n  spaceBetween: 20,\n  loop: true,\n\n  // Navigation arrows\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  speed: 1500,\n  autoplay: {\n    delay: 3000,\n  },\n  breakpoints: {\n    768: {\n      slidesPerView: 4,\n      spaceBetween: 20,\n    },\n    1024: {\n      slidesPerView: 5,\n      spaceBetween: 20,\n    },\n  },\n});\n\nasync function getUpcomingFilms() {\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  try {\n    const { results } = await searchUpcomimgFilms();\n    if (!results || results === []) return;\n\n    const markup = results\n      .map(film => {\n        return `\n      <li class=\"upcoming-card swiper-slide\" data-film-id=\"${film.id}\">\n        <img\n          src=\"${\n            film.poster_path\n              ? POSTER_URL + film.poster_path\n              : '../images/default-poster.jpg'\n          }\"\n          alt=\"${film.title ? film.title : 'Not known'}\"\n          class=\"upcoming-img\"\n          loading=\"lazy\"\n        />\n        <p class=\"upcoming-card-title\">Release date <br/>\n${film.release_date ? film.release_date : 'Not known'}</p>\n      </li>`;\n      })\n      .join('');\n\n    upcomingListRef.innerHTML = '';\n    upcomingListRef.insertAdjacentHTML('afterbegin', markup);\n  } catch (err) {\n    console.log(err);\n  }\n}\ngetUpcomingFilms();\n\nupcomingListRef.addEventListener('click', e => {\n  openModal(e, 'upcoming-card');\n});\n","import { searchMovieByName } from '../js/fetchApi';\nimport { renderFilmCards } from '../js/render-card';\nimport { notFoundFilm } from '../js/create-images-for-js-input';\n\n\nconst input = document.querySelector('.search__input');\nconst btn = document.querySelector('.search__button');\nconst searchForm = document.querySelector('.search');\nconst error = document.querySelector('.warning-notification');\nconst mainSectionCards = document.querySelector('.main-section__allcards');\n\n\nsearchForm.addEventListener('submit', onFormSubmit);\n\nasync function onFormSubmit(e) {\n  e.preventDefault();\n  const value = e.currentTarget.searchQuery.value.trim();\n    console.log(value);\n\n    if (value === '') {\n            return (error.textContent =\n                'No matches found for your query. Enter the correct movie name.');\n        }\n        else error.textContent = '';\n\n    try {\n        const response = await searchMovieByName(value);\n        const getMovie = response.results;\n        console.log(getMovie);\n\n        if (getMovie.length === 0) {\n            return (error.textContent = `No matches found for your query. Enter the correct movie name.`),\n                mainSectionCards.innerHTML = \" \",\n                mainSectionCards.innerHTML = `<div class=\"wrong-box\"> <p class=\"not-found-text\">Not Found</p></div>`,\n                document.querySelector('.wrong-box').appendChild(notFoundFilm).classList.add('film-not-found'),\n                document.querySelector('.pagination-container').classList.add(\"visually-hidden\");\n            \n             \n    }\n        else {\n            error.textContent = '',\n            document.querySelector('.pagination-container').classList.remove(\"visually-hidden\");    \n        };\n\n    renderFilmCards(getMovie);\n\n    }\n        \n    catch (error) {\n        console.log(error);\n    }\n    };\n","\nimport { searchGenres } from './fetchApi';\nimport { refs } from './refs';\n\n\nexport async function renderFilmCards(elem) {\n  const allCards = elem\n    .map(film => {\n      return createElementsMovie(film);\n    })\n    .join('');\n\n  refs.mainContainerEl.innerHTML = '';\n  refs.mainContainerEl.insertAdjacentHTML('beforeend', allCards);\n}\n\nfunction createElementsMovie(data) {\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  let genreFilm = '';\n  let img = document.createElement('img');\n \n  img.src = new URL('../images/default-poster.jpg', import.meta.url)\n\n  if (data.genre_ids.length <= 2) {\n    genreFilm = data.genre_ids.map(genre => allGenres.get(genre)).join(', ');\n  } else {\n    genreFilm =\n      allGenres.get(data.genre_ids[0]) +\n      ', ' +\n      allGenres.get(data.genre_ids[1]) +\n      ', Other';\n  }\n  return `\n  <div class=\"main-section__card\" data-film-id=\"${data.id}\">\n        <img src=\"${\n          data.poster_path\n            ? POSTER_URL + data.poster_path\n            : img.src \n        }\" alt=\"${\n    data.title ? data.title : 'Unknown'\n  }\" class=\"main-section__image\" loading=\"lazy\">\n    <div>\n\t\t\t\t\t<h2 class=\"main-section__card-title\">${data.title ? data.title : 'Unknown title'}</h2>\n                    <div class=\"main-section__cards\">\n\t\t\t\t\t<p class=\"main-section__description\">${\n            data.genre_ids ? genreFilm : 'Unknown'\n          } | ${data.release_date ? data.release_date.slice(0, 4) : 'n/a'}</p>\n\t\t\t\t\n                <span class=\"main-section__card-rating\">${\n                  data.vote_average ? data.vote_average.toFixed(1) : '0'\n                }</span></div>\n                </div>\n                \n    </div>`;\n}\n\nconst allGenres = new Map();\n\nsearchGenres().then(res => {\n  return res.genres.map(({ id, name }) => {\n    allGenres.set(id, name);\n  });\n});\n","export const refs = {\n    mainContainerEl: document.querySelector('.main-section__allcards'),\n    searchForm: document.querySelector('.search'),\n    input_error: document.querySelector('.warning-notification'),\n    \n}\n\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1aYh8\")).toString();","import { API_KEY } from './config';\nimport { BASE_URL } from './config';\nimport { renderFilmCards } from './render-card';\n\nconst API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}`\n\nconst genres = [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n  \n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n  ]\n\nconst tagsEl = document.querySelector('.genres-list');\n\nlet selectedGenre = [];\nsetGenre();\nfunction setGenre() {\n\n    genres.forEach(genre => {\n        const filmCard = document.createElement('button');\n        filmCard.classList.add('genres-button');\n        filmCard.id=genre.id;\n        filmCard.innerText = genre.name;\n        filmCard.addEventListener('click', () => {\n            if(selectedGenre.length == 0){\n                selectedGenre.push(genre.id);\n            }\n            console.log('selectedGenre'+ selectedGenre)\n            getMovies(API_URL + '&with_genres=' + selectedGenre)\n            selectedGenre = []\n        \n        })\n        tagsEl.append(filmCard);\n        \n    })\n};\n\ngetMovies(API_URL);\n\nfunction getMovies(url) {\n    fetch(url).then(res => res.json()).then(data => {\n        console.log(data.results)\n        if (data.results.length !== 0) {\n            renderFilmCards(data.results);\n        } })\n\n}\n\n\n\n\n\n\n\n\n\n\n// ---------------------------- second code -------------------------------------------\n\n// const familyBtn = document.querySelector('#family');\n// const musicBtn = document.querySelector('#music');\n// const mysteryBtn = document.querySelector('#mystery');\n// const dramaBtn = document.querySelector('#drama');\n// const warBtn = document.querySelector('#war');\n// const scienceFictionBtn = document.querySelector('#scienceFiction');\n// const thrillerBtn = document.querySelector('#thriller');\n\n// familyBtn.addEventListener('click', getFamily);\n// musicBtn.addEventListener('click', getMusic);\n// mysteryBtn.addEventListener('click', getMystery);\n// dramaBtn.addEventListener('click', getDrama);\n// warBtn.addEventListener('click', getWar);\n// scienceFictionBtn.addEventListener('click', getScienceFiction);\n// thrillerBtn.addEventListener('click', getThriller);\n\n// function getFamily(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=10751`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getMusic(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=37`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n// function getMystery(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=9648`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n\n// function getDrama(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=18`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n\n// function getWar(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=10752`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n\n// function getScienceFiction(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=878`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n\n// function getThriller(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=53`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n\n// function getMystery(API_URL) {\n//     API_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=9648`\n//     fetch(API_URL).then(res => res.json()).then(data => {\n//         console.log(data.results);\n//         renderFilmCards(data.results);\n// })\n// }\n\n\n// ---------------------- first code -------------------------\n\n\n// familyBtn.addEventListener('click', getMovies);\n\n// // function rengerGanre(id) {\n\n// // }\n\n// // function getMovies() {\n// //     const urlAPI = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n// //     axios.get(urlAPI)\n// //         .then(res => console.log(res.data.total_results))\n// //         .then(({ results }) => renderFilms(results))\n// //     .catch(error => console.log(error))\n// // }\n\n\n\n// function getMovies(page) {\n//     // page = 1\n//     for (let page = 1; page < 5; page++) {\n//        const urlAPI = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n//     console.log(urlAPI);\n//     axios.get(urlAPI)\n//         .then(res => {\n//             page += 1;\n    \n//             return res.data\n//         })\n//         .then(({ results }) => renderFilms(results))\n        \n//         // .then(({ results }) => renderFilms(results))\n//     .catch(error => console.log(error))\n//     }\n    \n// }\n\n\n// function renderFilms(results) {\n//     renderFilmsArea.innerHTML = '';\n    \n//     const movieElements = results.map(({ poster_path, title, genre_ids }) => {\n//         if(genre_ids.includes(16))\n//         return `<div class=\"main-section__card\">\n//         <img src=\"https://www.themoviedb.org/t/p/w220_and_h330_face/${poster_path}\" width=\"500\" height=\"600\" alt=\"${title}\"  loading=\"lazy\">\n//     <p class=\"main-section__name\">\n// \t\t\t\t\t<h2 class=\"main-section__card-title\">${title}</h2>\n// \t\t\t\t\t<p class=\"main-section__description\">Drama, Action | 2022</p>\n// \t\t\t\t</p>\n//     </div>`\n//     }).join('');\n//         renderFilmsArea.insertAdjacentHTML('beforeend', movieElements)\n    \n// }\n\n\n\n\n","import { getPopularFilm } from '../js/fetchApi';\nimport * as pagination from './pagination';\n\nimport { renderFilmCards } from './render-card';\n\nconst _getPopularFilm = () => {\n  getPopularFilm(pagination.getCurrentPage()).then(\n    ({ page, results, total_pages, total_results }) => {\n      renderFilmCards(results);\n    }\n  );\n};\n\n_getPopularFilm();\n\npagination.subscribeOnPageChange(_getPopularFilm);\n"],"names":["parcelRequire","register","JSON","parse","$9TCtp","$7de36ec56bfec575$var$upcomingListRef","document","querySelector","Swiper","direction","slidesPerView","spaceBetween","loop","navigation","nextEl","prevEl","speed","autoplay","delay","breakpoints","async","results","searchUpcomimgFilms","markup","map","film","id","poster_path","title","release_date","join","innerHTML","insertAdjacentHTML","err","console","log","$7de36ec56bfec575$var$getUpcomingFilms","addEventListener","e","$hbpud","openModal","$ee27a4d7c64fc8c4$export$21666b427502ea6d","mainContainerEl","searchForm","input_error","$5c9ec74aeed8cd43$export$e6243425577ce802","elem","allCards","data","POSTER_URL","genreFilm","img","createElement","src","URL","$77b44675a96097a2$exports","genre_ids","length","genre","$5c9ec74aeed8cd43$var$allGenres","get","slice","vote_average","toFixed","$5c9ec74aeed8cd43$var$createElementsMovie","resolve","import","meta","url","toString","Map","searchGenres","then","res","genres","name","set","$65ff9575e8ee77de$var$searchForm","$65ff9575e8ee77de$var$error","$65ff9575e8ee77de$var$mainSectionCards","preventDefault","value","currentTarget","searchQuery","trim","textContent","getMovie","searchMovieByName","appendChild","$45IZH","notFoundFilm","classList","add","remove","error1","$kwJfa","$cc8167df025acb14$var$API_URL","BASE_URL","API_KEY","$cc8167df025acb14$var$genres","$cc8167df025acb14$var$tagsEl","$cc8167df025acb14$var$selectedGenre","$cc8167df025acb14$var$getMovies","fetch","json","forEach","filmCard","innerText","push","append","$704a8c9070f82bfa$var$_getPopularFilm","getPopularFilm","$2nhTy","getCurrentPage","page","total_pages","total_results","subscribeOnPageChange"],"version":3,"file":"index.7ebc4c9a.js.map"}